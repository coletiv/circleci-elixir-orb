description: "Static code analysis tool"
parameters:
  cache-version:
    type: string
    description: String key to store cache
    default: "v1"
  format:
    type: string
    description: Formatting the errors
    default: "short"
steps:
  - run: printenv
  # Restore Cache
  # NOTE: Dialyzer cache should be invalidated if Elixir or OTP version change
  - restore_cache:
      keys:
        - << parameters.cache-version >>-local_mix-cache-{{ .Environment.ELIXIR_VERSION }}-{{ .Environment.OTP_VERSION }}-{{ .Branch }}-{{ checksum "mix.lock" }}
        - << parameters.cache-version >>-local_mix-cache-{{ .Environment.ELIXIR_VERSION }}-{{ .Environment.OTP_VERSION }}-{{ .Branch }}
        - << parameters.cache-version >>-local_mix-cache-{{ .Environment.ELIXIR_VERSION }}-{{ .Environment.OTP_VERSION }}

  - run: mix dialyzer --halt-exit-status --format << parameters.format >>

  # Save Cache
  - save_cache:
      key: << parameters.cache-version >>-local_mix-cache-{{ .Environment.ELIXIR_VERSION }}-{{ .Environment.OTP_VERSION }}-{{ .Branch }}-{{ checksum "mix.lock" }}
      paths:
        - "~/.mix"
        - "_build"
  - save_cache:
      key: << parameters.cache-version >>-local_mix-cache-{{ .Environment.ELIXIR_VERSION }}-{{ .Environment.OTP_VERSION }}-{{ .Branch }}
      paths:
        - "~/.mix"
        - "_build"
  - save_cache:
      key: << parameters.cache-version >>-local_mix-cache-{{ .Environment.ELIXIR_VERSION }}-{{ .Environment.OTP_VERSION }}
      paths:
        - "~/.mix"
        - "_build"
